# Maintainer: Thomas Fanninger <thomas@fanninger.at>

pkgname=gogs
pkgver=0.3.1
pkgrel=1
pkgdesc="Gogs(Go Git Service) is a Self Hosted Git Service in the Go Programming Language."
arch=('x86_64' 'i686' 'armv7h')
url="https://github.com/gogits/$pkgname/"
license=('MIT')
depends=('git')
makedepends=('go' 'git')
options=('!strip' '!emptydirs')
install=gogs.install
sha256sums=('SKIP')
_gourl=github.com/gogits/gogs

build() {
  export GOROOT=/usr/lib/go

  rm -rf build
  mkdir -p build/go
  cd build/go

  for f in "$GOROOT/"*; do
    ln -s "$f"
  done

  rm pkg
  mkdir pkg
  cd pkg

  for f in "$GOROOT/pkg/"*; do
    ln -s "$f"
  done

  platform=`for f in "$GOROOT/pkg/"*; do echo \`basename $f\`; done|grep linux`

  rm "$platform"
  mkdir "$platform"
  cd "$platform"

  for f in "$GOROOT/pkg/$platform/"*.h; do
    ln -s "$f"
  done

  export GOROOT="$srcdir/build/go"
  export GOPATH="$srcdir/build"

  go get -tags sqlite -fix "$_gourl"

  # Prepare executable
  if [ -d "$srcdir/build/src" ]; then
    cd "$srcdir/build/src/$_gourl"
    go build -o "$srcdir/build/$pkgname"
  else
    echo 'Old sources for a previous version of this package are already present!'
    echo 'Build in a chroot or uninstall the previous version.'
    return 1
  fi
}

package() {
  export GOROOT="$GOPATH"

  # Package go package files
  for f in "$srcdir/build/go/pkg/"* "$srcdir/build/pkg/"*; do
    # If it's a directory
    if [ -d "$f" ]; then
      cd "$f"
      mkdir -p "$pkgdir/$GOROOT/pkg/`basename $f`"
      for z in *; do
        # Check if the directory name matches
        if [ "$z" == `echo $_gourl | cut -d/ -f1` ]; then
          cp -r $z "$pkgdir/$GOROOT/pkg/`basename $f`"
        fi
      done
      cd ..
    fi
  done

  # Package source files
  if [ -d "$srcdir/build/src" ]; then
    mkdir -p "$pkgdir/usr/lib/go/src/pkg"
    cp -r "$srcdir/build/src/"* "$pkgdir/usr/lib/go/src/pkg/"
    find "$pkgdir" -depth -type d -name .git -exec rm -r {} \;
  fi
  # Package license (if available)
  for f in LICENSE COPYING; do
    if [ -e "$srcdir/build/src/$_gourl/$f" ]; then
      install -Dm644 "$srcdir/build/src/$_gourl/$f" \
        "$pkgdir/usr/share/licenses/$pkgname/$f"
    fi
  done

  # Package executables
  if [ -e "$srcdir/build/$pkgname" ]; then
    install -Dm755 "$srcdir/build/$pkgname" \
      "$pkgdir/home/gogs/$pkgname/$pkgname"
  fi

  # Config and other files into the home directory
  mkdir -p "$pkgdir/home/gogs/$pkgname/"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/conf" "$pkgdir/home/gogs/$pkgname"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/public" "$pkgdir/home/gogs/$pkgname"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/templates" "$pkgdir/home/gogs/$pkgname"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/start.sh" "$pkgdir/home/gogs/$pkgname"
}
