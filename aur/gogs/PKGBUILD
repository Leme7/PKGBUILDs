# Maintainer: Thomas Fanninger <thomas@fanninger.at>

pkgname=gogs
_pkgname=$pkgname
pkgver=0.4.2
pkgrel=3
pkgdesc="Gogs(Go Git Service) is a Self Hosted Git Service in the Go Programming Language."
arch=('i686' 'x86_64' 'armv6h' 'armv7h')
changelog=$pkgname.changelog
url="http://gogits.org/"
license=('MIT')
changelog=$pkgname.changelog
depends=('git')
optdepends=('sqlite: SQLite support'
            'mariadb: MariaDB support'
            'postgresql: PostgreSQL support'
            'redis: Redis support'
            'memcached: MemCached support'
            'openssh: GIT over SSH support')
makedepends=('go>=1.2' 'git' 'patch')
conflicts=('gogs-bin' 'gogs-git' 'gogs-git-dev')
options=('!strip' '!emptydirs')
backup=('srv/gogs/conf/app.ini')

install=gogs.install

source=('gogs.service'
        'app.ini.patch'
        'start.sh'
        "$_pkgname::git+https://github.com/gogits/gogs.git#tag=v$pkgver")

sha512sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

_goroot="/usr/lib/go"

prepare() {
  export GOROOT=/usr/lib/go

  rm -rf build
  mkdir -p build/go
  cd build/go

  for f in "$GOROOT/"*; do
    ln -s "$f"
  done

  rm pkg
  mkdir pkg
  cd pkg

  for f in "$GOROOT/pkg/"*; do
    ln -s "$f"
  done

  export GOROOT="$srcdir/build/go"
  export GOPATH="$srcdir/build"
  
  mkdir -p "$GOPATH/src/github.com/gogits"
  mv "$srcdir/$_pkgname" $GOPATH/src/github.com/gogits/gogs

	msg2 "Check and download dependencies"
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/gogits/cache
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/gogits/gfm
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/gogits/git
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/gogits/logs
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/gogits/oauth2
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/gogits/session
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/codegangsta/cli
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/go-martini/martini
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/Unknwon/cae/zip
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/Unknwon/goconfig
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/nfnt/resize
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/Unknwon/com
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/go-sql-driver/mysql
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/lib/pq 
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/mattn/go-sqlite3
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/beego/redigo/redis
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/beego/memcache
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/go-xorm/core
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/go-xorm/xorm
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/qiniu/log
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/robfig/cron
	go get -d -fix -u -x -tags='sqlite redis memcache' github.com/juju2013/goldap

  # Execute patch
  msg2 "Execute patches"
  patch -Np1 -i "$srcdir/app.ini.patch" "$GOPATH/src/github.com/gogits/gogs/conf/app.ini"
}

build() {
  cd $GOPATH/src/github.com/gogits/gogs

  msg2 "Build GO program"
  go fix
  go build -x -tags='sqlite redis memcache'
}

package() {
  mkdir -p "$pkgdir/usr/share/$_pkgname/"
  cp "$startdir/start.sh" "$pkgdir/usr/share/$_pkgname/"
  chmod +x "$pkgdir/usr/share/$_pkgname/start.sh"
  cp "$srcdir/build/src/github.com/gogits/gogs/gogs" "$pkgdir/usr/share/$_pkgname/"
  chmod +x "$pkgdir/usr/share/$_pkgname/gogs"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/conf" "$pkgdir/usr/share/$_pkgname"
	mkdir -p "$pkgdir/usr/share/themes/goges/default/"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/public" "$pkgdir/usr/share/themes/goges/default"
  cp -r "$srcdir/build/src/github.com/gogits/gogs/templates" "$pkgdir/usr/share/themes/goges/default"
 
  mkdir -p "$pkgdir/srv/$_pkgname/conf"
  cp "$pkgdir/usr/share/$_pkgname/conf/app.ini" "$pkgdir/srv/$_pkgname/conf/app.ini"

  mkdir -p "$pkgdir/etc/systemd/system/"
  cp -r "$startdir/gogs.service" "$pkgdir/etc/systemd/system/"

  mkdir -p "$pkgdir/usr/share/licenses/$_pkgname"
  cp "$srcdir/build/src/github.com/gogits/gogs/LICENSE" "$pkgdir/usr/share/licenses/$_pkgname"
}
